<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"
			p:driverClassName="com.mysql.jdbc.Driver"
			p:url="jdbc:mysql://192.168.183.130:3306/activiti?useUnicode=true&amp;serverTimezone=UTC&amp;characterEncoding=UTF-8&amp;useSSL=false"
			p:username="root"
			p:password="root" />
    
    <!-- mybatis文件配置，扫描所有mapper文件 -->
      <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:conf/mybatis-config.xml"
          p:mapperLocations="classpath:mapper/*.xml"/> <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->
      
   <!-- spring与mybatis整合配置，扫描所有mapper -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="mapper" 
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
 
   <!-- 对数据源进行事务管理 -->
  <bean id="transactionManager" 
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource"/>
        
 <tx:annotation-driven transaction-manager="transactionManager"/>
 
 <!-- activiti 配置-->
<!-- 	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration" >
		 <property name="dataSource" ref="dataSource" />
   		 <property name="transactionManager" ref="transactionManager" />
   		 构建流程引擎时，如果数据库不存在，则创建
   		 <property name="databaseSchemaUpdate" value="true" />
   		 定时器线程组件
    	 <property name="jobExecutorActivate" value="false" /> 
    	 历史存档等级配置， 
    	 	none：不存储历史归档，
    	 	activity：归档所有流程实例和活动实例。不归档细节，
    	 	audit：默认级别,归档所有流程实例，活动实例和提交的表单属性。以至于通过表单的所有用户交互都是可跟踪并可以被审计。
    	 	full:保存audit级别的所有信息加上像流程变量的所有其它可能的细节。
    	 
    	 <property name="history" value="full" />
    	 设置流程图字体，解决乱码问题
    	 <property name="activityFontName" value="宋体" />
    	 <property name="labelFontName" value="宋体" />
    	     	 
	</bean>
	
	流程引擎
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
   		 <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
  	流程定义服务
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
    流程实例运行时服务
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    任务服务
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    历史服务
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    流程管理控制
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	用户，用户组，身份服务
	<bean id="identityService" factory-bean="processEngine"   factory-method="getIdentityService" />
	表单服务
	<bean id="formService" factory-bean="processEngine"   factory-method="getFormService" />  -->
	
        
</beans>